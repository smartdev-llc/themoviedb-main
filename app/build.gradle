apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.jaredsburrows.license'

//if use google service uncomment below line
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'

// keystore.properties file contain keystore information for signing, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

// environment.properties file contain keystore information for environment, in the rootProject folder.
def environmentPropertiesFile = rootProject.file("environment.properties")
def environmentProperties = new Properties()
environmentProperties.load(new FileInputStream(environmentPropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        //TODO should replace all google-service content also, temporary replcae pnly packagename
        applicationId "io.github.justinlewis.app"
        compileSdkVersion rootProject.ext.compileSdkVersion
        minSdkVersion rootProject.ext.minSdkVersion
        versionCode rootProject.ext.appVersionCode
        versionName rootProject.ext.appVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['store_file'])
            storePassword keystoreProperties['store_password']
            keyAlias keystoreProperties['key_alias']
            keyPassword keystoreProperties['key_alias_password']
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    buildTypes {
        def STRING = "String"
        def BOOLEAN = "boolean"
        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            buildConfigField BOOLEAN, "SHOW_LOG", environmentProperties['showLogDev']
            buildConfigField STRING, "SERVER_API_URI", environmentProperties['serverApiUriDev']
            buildConfigField STRING, "SERVER_API_KEY", environmentProperties['serverApiKeyDev']
            buildConfigField STRING, "SERVER_LOG_URI", environmentProperties['serverLogUriDev']
            buildConfigField STRING, "SERVER_LOG_ACC", environmentProperties['serverLogAccDev']
            buildConfigField STRING, "SERVER_LOG_PASS", environmentProperties['serverLogPasswordDev']
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        alpha {
            signingConfig signingConfigs.release
            initWith debug
            buildConfigField BOOLEAN, "SHOW_LOG", environmentProperties['showLogTest']
            buildConfigField STRING, "SERVER_API_URI", environmentProperties['serverApiUriTest']
            buildConfigField STRING, "SERVER_API_KEY", environmentProperties['serverApiKeyTest']
            buildConfigField STRING, "SERVER_LOG_URI", environmentProperties['serverLogUriTest']
            buildConfigField STRING, "SERVER_LOG_ACC", environmentProperties['serverLogAccTest']
            buildConfigField STRING, "SERVER_LOG_PASS", environmentProperties['serverLogPasswordTest']
            matchingFallbacks = ['debug']
        }
        staging {
            signingConfig signingConfigs.release
            initWith debug
            buildConfigField BOOLEAN, "SHOW_LOG", environmentProperties['showLogStaging']
            buildConfigField STRING, "SERVER_API_URI", environmentProperties['serverApiUriStaging']
            buildConfigField STRING, "SERVER_API_KEY", environmentProperties['serverApiKeyStaging']
            buildConfigField STRING, "SERVER_LOG_URI", environmentProperties['serverLogUriStaging']
            buildConfigField STRING, "SERVER_LOG_ACC", environmentProperties['serverLogAccStaging']
            buildConfigField STRING, "SERVER_LOG_PASS", environmentProperties['serverLogPasswordStaging']
            matchingFallbacks = ['debug']
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            buildConfigField BOOLEAN, "SHOW_LOG", environmentProperties['showLogRelease']
            buildConfigField STRING, "SERVER_API_URI", environmentProperties['serverApiUriRelease']
            buildConfigField STRING, "SERVER_API_KEY", environmentProperties['serverApiKeyRelease']
            buildConfigField STRING, "SERVER_LOG_URI", environmentProperties['serverLogUriRelease']
            buildConfigField STRING, "SERVER_LOG_ACC", environmentProperties['serverLogAccRelease']
            buildConfigField STRING, "SERVER_LOG_PASS", environmentProperties['serverLogPasswordRelease']
        }
    }

    compileOptions {
        incremental = true
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    dexOptions {
        threadCount 4
        javaMaxHeapSize '4g'
    }
    lintOptions {
        abortOnError false
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    useBuildCache = true
}

dependencies {
    //Runtime
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':core')
    implementation project(path: ':domain')
    implementation project(path: ':common')

    //firebase
    implementation platform(deps.firebaseBom)
    implementation deps.fcm
    implementation deps.rxWorker

    //room - paging
    kapt deps.roomCompiler
    kapt deps.lifecycleCompiler

    //Ads
    //UI
    implementation deps.supportAppCompat
    implementation deps.supportDesignCompat
    implementation deps.supportRecyclerviewCompat
    implementation deps.supportCardView
    implementation deps.constrainLayout
    implementation deps.glide
    implementation deps.navigationFragmentKtx
    implementation deps.navigationUiKtx
    implementation deps.searchview

    //data and logic
    implementation deps.easypermissions
    implementation deps.rxRelay
    implementation deps.okhttp3
    implementation deps.retrofit

    //For binding and injection
    kapt deps.dagger2compiler
    kapt deps.dagger2processor
    kapt deps.butterknifeCompiler

    //login
    implementation deps.timber

    //ACRA
    implementation deps.acraCore
    implementation deps.acraDialog
    implementation deps.acraHttp
    implementation deps.acraScheduler


    //test dependencies
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.1'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply from: "$project.rootDir/tools/git/git.gradle"
apply from: "$project.rootDir/versioning.gradle"
